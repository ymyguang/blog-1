<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>github - 标签 - zu1k</title><link>https://lgf.im/tags/github/</link><description>github - 标签 - zu1k</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>i@lgf.im (zu1k)</managingEditor><webMaster>i@lgf.im (zu1k)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 27 Mar 2020 15:45:02 +0000</lastBuildDate><atom:link href="https://lgf.im/tags/github/" rel="self" type="application/rss+xml"/><item><title>给git设置代理</title><link>https://lgf.im/posts/coding/set-proxy-for-git/</link><pubDate>Fri, 27 Mar 2020 15:45:02 +0000</pubDate><author>作者</author><guid>https://lgf.im/posts/coding/set-proxy-for-git/</guid><description><![CDATA[<p>近期，Github的直连速度一直不理想，甚至被墙或者MITM，最好的解决办法就是挂代理</p>
<p>Git 可以使用四种不同的协议来传输资料：本地协议（Local），HTTP 协议，SSH（Secure Shell）协议及 Git 协议</p>
<p>而我们平时使用github一般使用两种协议，一种是http协议，另一种是ssh协议，针对这两种协议有两种不同的代理设置办法</p>
<h2 id="http协议">http协议</h2>
<p>通常使用的链接形如：<code>https://github.com/git/git.git</code></p>
<p>针对这种协议，代理设置比较简单</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># http或https代理</span>
git config --global https.proxy http://127.0.0.1:1080
git config --global https.proxy https://127.0.0.1:1080

<span class="c1"># 取消代理</span>
git config --global --unset http.proxy
git config --global --unset https.proxy
</code></pre></td></tr></table>
</div>
</div><h2 id="ssh协议">ssh协议</h2>
<p>通常使用的链接形如：<code>git@github.com:git/git.git</code> 或者 <code>ssh://[&lt;username&gt;@]&lt;server&gt;[:&lt;port&gt;]/path/repo.git</code></p>
<p>对于使用ssh协议的库，上面的代理设置办法就失效了，需要给ssh设置socks代理</p>
<p>在 <code>~/.ssh/config</code> 文件中添加下面内容， 如果没有这个文件就新建</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">Host github.com
ProxyCommand nc -X <span class="m">5</span> -x 127.0.0.1:1080 %h %p
</code></pre></td></tr></table>
</div>
</div><p>这里使用的是nc命令，linux需要安装netcat(一般自带了)，windows需要单独下载</p>
<p>windows如果安装了<code>mingw</code>也可以使用<code>connect</code>命令来替代<code>nc</code>命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">Host github.com
ProxyCommand connect -S 127.0.0.1:1080 %h %p
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>补充： 详见 <a href="https://blog.lgf.im/2020/use-ucloud-globalssh-to-speedup-server-ssh.html">https://blog.lgf.im/2020/use-ucloud-globalssh-to-speedup-server-ssh.html</a>
可以通过 GlobalSSH 的海外加速服务来加速github的访问，经过我的尝试效果还不错，可以跑到10Mbps
我用的域名为 <code>zll.us</code> ，大家可以拿去用，使用方法如下：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">原命令
git clone git@github.com:moby/moby.git

替换后
git clone git@zll.us:moby/moby.git
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Github等大面积https劫持</title><link>https://lgf.im/posts/events/mitm-https-hijack-github/</link><pubDate>Fri, 27 Mar 2020 08:47:11 +0000</pubDate><author>作者</author><guid>https://lgf.im/posts/events/mitm-https-hijack-github/</guid><description><![CDATA[<p>昨天下午两点多，突然在一个站长群里听到有人说 Github Pages 的证书大批量出现错误，不一会就在V2EX上看到相关讨论的帖子</p>
<p>当天晚上再次刷V2EX的时候发现部分cloudflare的IP和京东主站部分IP也出现相似的劫持事件</p>
<p>今天早晨8点左右，在V2EX上发现有人讨论 Github 主站出现相同的https劫持，不经过代理访问发现证书的确异常</p>
<p></p>
<p>查看证书详情</p>
<p></p>
<p></p>
<h2 id="检查github证书">检查Github证书</h2>
<p>这里我通过北京和香港两台阿里云主机，使用openssl提供的方法查看证书详细内容</p>
<p>命令为: <code>openssl s_client -showcerts -connect github.com:443 &lt; /dev/null</code></p>
<h3 id="北京阿里云">北京阿里云</h3>
<details>
  <summary>点击展开</summary>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">➜  ~ openssl s_client -showcerts -connect github.com:443 &lt; /dev/null
CONNECTED<span class="o">(</span>00000003<span class="o">)</span>
<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">C</span> <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
verify error:num<span class="o">=</span>19:self signed certificate in certificate chain
verify <span class="k">return</span>:1
<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">C</span> <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
verify <span class="k">return</span>:1
<span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> SERVER, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
verify <span class="k">return</span>:1
---
Certificate chain
 <span class="m">0</span> s:C <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> SERVER, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
   i:C <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
-----BEGIN CERTIFICATE-----
MIIB4TCCAYcCFDjGwZUOfrr1+SWHR5GxJ/rwXsHZMAoGCCqGSM49BAMCMHExCzAJ
BgNVBAYTAkNOMQswCQYDVQQIDAJHRDELMAkGA1UEBwwCU1oxDDAKBgNVBAoMA0NP
TTEMMAoGA1UECwwDTlNQMQswCQYDVQQDDAJDQTEfMB0GCSqGSIb3DQEJARYQMzQ2
NjA4NDUzQHFxLmNvbTAeFw0xOTA5MjYwOTMzMTNaFw0yOTA5MjMwOTMzMTNaMHUx
CzAJBgNVBAYTAkNOMQswCQYDVQQIDAJHRDELMAkGA1UEBwwCU1oxDDAKBgNVBAoM
A0NPTTEMMAoGA1UECwwDTlNQMQ8wDQYDVQQDDAZTRVJWRVIxHzAdBgkqhkiG9w0B
CQEWEDM0NjYwODQ1M0BxcS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASJ
27aMaVclvmdT8m6l98K999FM4dYTg4ag0627S2bxbLYHyLdQ0jqay5kA9KCF9Ucw
uzcqtTrNERlLIsxDGkLjMAoGCCqGSM49BAMCA0gAMEUCIH1+jEiQTVA+siP2g9kw
ITFZZINVKyET48788OSCLK1hAiEA+c5bJvnrdtZ1rbsLXJWtglkXSeBaHy5Wdt7w
<span class="nv">dGc7McM</span><span class="o">=</span>
-----END CERTIFICATE-----
 <span class="m">1</span> s:C <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
   i:C <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com
-----BEGIN CERTIFICATE-----
MIICNzCCAd2gAwIBAgIUD6UJah0ReDrJIuxhqrTa0CAAbAMwCgYIKoZIzj0EAwIw
cTELMAkGA1UEBhMCQ04xCzAJBgNVBAgMAkdEMQswCQYDVQQHDAJTWjEMMAoGA1UE
CgwDQ09NMQwwCgYDVQQLDANOU1AxCzAJBgNVBAMMAkNBMR8wHQYJKoZIhvcNAQkB
FhAzNDY2MDg0NTNAcXEuY29tMB4XDTE5MDkyNjA5MzIzN1oXDTI5MDkyMzA5MzIz
N1owcTELMAkGA1UEBhMCQ04xCzAJBgNVBAgMAkdEMQswCQYDVQQHDAJTWjEMMAoG
A1UECgwDQ09NMQwwCgYDVQQLDANOU1AxCzAJBgNVBAMMAkNBMR8wHQYJKoZIhvcN
AQkBFhAzNDY2MDg0NTNAcXEuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
qZ26n2ml6hcyf+NS0TP8PSZ1qlFzUb/tpr6Wb6zE9cSzkGOXej0ddI3sNvq/bLzk
LLvaQLEzaIFyRDY6fcSQ36NTMFEwHQYDVR0OBBYEFKv8Ri5sjN4WZoaWvK/h9Yf+
zhVyMB8GA1UdIwQYMBaAFKv8Ri5sjN4WZoaWvK/h9Yf+zhVyMA8GA1UdEwEB/wQF
MAMBAf8wCgYIKoZIzj0EAwIDSAAwRQIhANFUxlZxx3dfmxEu1I0huK9eY/IPl6Xz
AsUXUQZN2QPXAiACddgQK7I4I86sjPwjCMafPES9LkV/whcFV60LlAftaQ<span class="o">==</span>
-----END CERTIFICATE-----
---
Server certificate
<span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> SERVER, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com

<span class="nv">issuer</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> CN, <span class="nv">ST</span> <span class="o">=</span> GD, <span class="nv">L</span> <span class="o">=</span> SZ, <span class="nv">O</span> <span class="o">=</span> COM, <span class="nv">OU</span> <span class="o">=</span> NSP, <span class="nv">CN</span> <span class="o">=</span> CA, <span class="nv">emailAddress</span> <span class="o">=</span> 346608453@qq.com

---
No client certificate CA names sent
Peer signing digest: SHA256
Peer signature type: ECDSA
Server Temp Key: X25519, <span class="m">253</span> bits
---
SSL handshake has <span class="nb">read</span> <span class="m">1499</span> bytes and written <span class="m">395</span> bytes
Verification error: self signed certificate in certificate chain
---
New, TLSv1.2, Cipher is ECDHE-ECDSA-AES128-GCM-SHA256
Server public key is <span class="m">256</span> bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-ECDSA-AES128-GCM-SHA256
    Session-ID: 1A4A06D58F5DCC0FA80FFE4125AC12E555126BF8B7C7C627210B9C36F3B5A6ED
    Session-ID-ctx:
    Master-Key: 6BD176466BF93E52D592216063276369497FA26AFF0E7343A872FFA6E3F12BFF611BFDA4F5994F297ECC5772EE812305
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: <span class="m">7200</span> <span class="o">(</span>seconds<span class="o">)</span>
    TLS session ticket:
    <span class="m">0000</span> - 7a 4c <span class="m">52</span> 3b d5 f6 1c c4-ea 0d <span class="m">86</span> <span class="m">45</span> <span class="m">37</span> 1a <span class="m">57</span> c4   zLR<span class="p">;</span>.......E7.W.
    <span class="m">0010</span> - a5 <span class="m">47</span> 0e <span class="m">76</span> <span class="m">87</span> 9f f1 68-ac 6c <span class="m">37</span> e3 <span class="m">02</span> <span class="m">87</span> <span class="m">61</span> <span class="m">77</span>   .G.v...h.l7...aw
    <span class="m">0020</span> - d9 c5 6a <span class="m">65</span> <span class="m">88</span> 3c <span class="m">44</span> e5-17 <span class="m">59</span> 5e <span class="m">30</span> de <span class="m">55</span> <span class="m">51</span> 4a   ..je.&lt;D..Y^0.UQJ
    <span class="m">0030</span> - f4 9e <span class="m">51</span> c9 <span class="m">35</span> ee ff a9-62 <span class="m">60</span> a2 7d <span class="m">63</span> <span class="nb">fc</span> c1 f9   ..Q.5...b<span class="sb">`</span>.<span class="o">}</span>c...
    <span class="m">0040</span> - a4 bf <span class="m">41</span> c5 2f <span class="m">42</span> 9a 7c-6d b0 <span class="m">99</span> <span class="m">49</span> <span class="m">63</span> 1c 0f 5c   ..A./B.<span class="p">|</span>m..Ic..<span class="se">\
</span><span class="se"></span>    <span class="m">0050</span> - <span class="m">37</span> ce <span class="m">32</span> <span class="m">85</span> e6 fb <span class="m">49</span> 5a-01 <span class="m">97</span> 9d <span class="m">23</span> 6c c6 9e b3   7.2...IZ...#l...
    <span class="m">0060</span> - <span class="m">56</span> dc ae c6 <span class="m">76</span> cf c6 ba-95 <span class="m">16</span> c6 c8 <span class="m">57</span> d1 be c7   V...v.......W...
    <span class="m">0070</span> - d0 a3 f9 <span class="m">66</span> c6 4e a9 99-52 <span class="m">60</span> fe <span class="m">53</span> <span class="m">61</span> 9d <span class="m">15</span> b1   ...f.N..R<span class="sb">`</span>.Sa...
    <span class="m">0080</span> - d2 1f a0 3c 0c <span class="m">78</span> <span class="m">41</span> af-d8 ac <span class="m">59</span> <span class="m">95</span> 9f c9 2f 1c   ...&lt;.xA...Y.../.
    <span class="m">0090</span> - <span class="m">07</span> <span class="m">25</span> <span class="m">74</span> 3e ae <span class="m">28</span> <span class="m">03</span> 1f-1b fd 0d b4 f8 c3 ad 4f   .%t&gt;.<span class="o">(</span>.........O

    Start Time: <span class="m">1585268898</span>
    Timeout   : <span class="m">7200</span> <span class="o">(</span>sec<span class="o">)</span>
    Verify <span class="k">return</span> code: <span class="m">19</span> <span class="o">(</span>self signed certificate in certificate chain<span class="o">)</span>
    Extended master secret: yes
---
DONE
</code></pre></td></tr></table>
</div>
</div></details>
<h3 id="香港阿里云">香港阿里云</h3>
<details>
  <summary>点击展开</summary>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">➜  ~ openssl s_client -showcerts -connect github.com:443 &lt; /dev/null
CONNECTED<span class="o">(</span>00000005<span class="o">)</span>
<span class="nv">depth</span><span class="o">=</span><span class="m">2</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert High Assurance EV Root CA
verify <span class="k">return</span>:1
<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Extended Validation Server CA
verify <span class="k">return</span>:1
<span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">businessCategory</span> <span class="o">=</span> Private Organization, <span class="nv">jurisdictionC</span> <span class="o">=</span> US, <span class="nv">jurisdictionST</span> <span class="o">=</span> Delaware, <span class="nv">serialNumber</span> <span class="o">=</span> 5157550, <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> San Francisco, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;GitHub, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> github.com
verify <span class="k">return</span>:1
---
Certificate chain
 <span class="m">0</span> s:businessCategory <span class="o">=</span> Private Organization, <span class="nv">jurisdictionC</span> <span class="o">=</span> US, <span class="nv">jurisdictionST</span> <span class="o">=</span> Delaware, <span class="nv">serialNumber</span> <span class="o">=</span> 5157550, <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> San Francisco, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;GitHub, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> github.com
   i:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Extended Validation Server CA
-----BEGIN CERTIFICATE-----
MIIHQjCCBiqgAwIBAgIQCgYwQn9bvO1pVzllk7ZFHzANBgkqhkiG9w0BAQsFADB1
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMTQwMgYDVQQDEytEaWdpQ2VydCBTSEEyIEV4dGVuZGVk
IFZhbGlkYXRpb24gU2VydmVyIENBMB4XDTE4MDUwODAwMDAwMFoXDTIwMDYwMzEy
MDAwMFowgccxHTAbBgNVBA8MFFByaXZhdGUgT3JnYW5pemF0aW9uMRMwEQYLKwYB
BAGCNzwCAQMTAlVTMRkwFwYLKwYBBAGCNzwCAQITCERlbGF3YXJlMRAwDgYDVQQF
Ewc1MTU3NTUwMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQG
A1UEBxMNU2FuIEZyYW5jaXNjbzEVMBMGA1UEChMMR2l0SHViLCBJbmMuMRMwEQYD
VQQDEwpnaXRodWIuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
xjyq8jyXDDrBTyitcnB90865tWBzpHSbindG/XqYQkzFMBlXmqkzC+FdTRBYyneZ
w5Pz+XWQvL+74JW6LsWNc2EF0xCEqLOJuC9zjPAqbr7uroNLghGxYf13YdqbG5oj
/4x+ogEG3dF/U5YIwVr658DKyESMV6eoYV9mDVfTuJastkqcwero+5ZAKfYVMLUE
sMwFtoTDJFmVf6JlkOWwsxp1WcQ/MRQK1cyqOoUFUgYylgdh3yeCDPeF22Ax8AlQ
xbcaI+GwfQL1FB7Jy+h+KjME9lE/UpgV6Qt2R1xNSmvFCBWu+NFX6epwFP/JRbkM
fLz0beYFUvmMgLtwVpEPSwIDAQABo4IDeTCCA3UwHwYDVR0jBBgwFoAUPdNQpdag
re7zSmAKZdMh1Pj41g8wHQYDVR0OBBYEFMnCU2FmnV+rJfQmzQ84mqhJ6kipMCUG
A1UdEQQeMByCCmdpdGh1Yi5jb22CDnd3dy5naXRodWIuY29tMA4GA1UdDwEB/wQE
AwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwdQYDVR0fBG4wbDA0
oDKgMIYuaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL3NoYTItZXYtc2VydmVyLWcy
LmNybDA0oDKgMIYuaHR0cDovL2NybDQuZGlnaWNlcnQuY29tL3NoYTItZXYtc2Vy
dmVyLWcyLmNybDBLBgNVHSAERDBCMDcGCWCGSAGG/WwCATAqMCgGCCsGAQUFBwIB
FhxodHRwczovL3d3dy5kaWdpY2VydC5jb20vQ1BTMAcGBWeBDAEBMIGIBggrBgEF
BQcBAQR8MHowJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBS
BggrBgEFBQcwAoZGaHR0cDovL2NhY2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0
U0hBMkV4dGVuZGVkVmFsaWRhdGlvblNlcnZlckNBLmNydDAMBgNVHRMBAf8EAjAA
MIIBfgYKKwYBBAHWeQIEAgSCAW4EggFqAWgAdgCkuQmQtBhYFIe7E6LMZ3AKPDWY
BPkb37jjd80OyA3cEAAAAWNBYm0KAAAEAwBHMEUCIQDRZp38cTWsWH2GdBpe/uPT
Wnsu/m4BEC2+dIcvSykZYgIgCP5gGv6yzaazxBK2NwGdmmyuEFNSg2pARbMJlUFg
U5UAdgBWFAaaL9fC7NP14b1Esj7HRna5vJkRXMDvlJhV1onQ3QAAAWNBYm0tAAAE
AwBHMEUCIQCi7omUvYLm0b2LobtEeRAYnlIo7n6JxbYdrtYdmPUWJQIgVgw1AZ51
vK9ENinBg22FPxb82TvNDO05T17hxXRC2IYAdgC72d+8H4pxtZOUI5eqkntHOFeV
CqtS6BqQlmQ2jh7RhQAAAWNBYm3fAAAEAwBHMEUCIQChzdTKUU2N+XcqcK0OJYrN
8EYynloVxho4yPk6Dq3EPgIgdNH5u8rC3UcslQV4B9o0a0w204omDREGKTVuEpxG
eOQwDQYJKoZIhvcNAQELBQADggEBAHAPWpanWOW/ip2oJ5grAH8mqQfaunuCVE+v
ac+88lkDK/LVdFgl2B6kIHZiYClzKtfczG93hWvKbST4NRNHP9LiaQqdNC17e5vN
HnXVUGw+yxyjMLGqkgepOnZ2Rb14kcTOGp4i5AuJuuaMwXmCo7jUwPwfLe1NUlVB
Kqg6LK0Hcq4K0sZnxE8HFxiZ92WpV2AVWjRMEc/2z2shNoDvxvFUYyY1Oe67xINk
myQKc+ygSBZzyLnXSFVWmHr3u5dcaaQGGAR42v6Ydr4iL38Hd4dOiBma+FXsXBIq
WUjbST4VXmdaol7uzFMojA4zkxQDZAvF5XgJlAFadfySna/teik<span class="o">=</span>
-----END CERTIFICATE-----
 <span class="m">1</span> s:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Extended Validation Server CA
   i:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert High Assurance EV Root CA
-----BEGIN CERTIFICATE-----
MIIEtjCCA56gAwIBAgIQDHmpRLCMEZUgkmFf4msdgzANBgkqhkiG9w0BAQsFADBs
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j
ZSBFViBSb290IENBMB4XDTEzMTAyMjEyMDAwMFoXDTI4MTAyMjEyMDAwMFowdTEL
MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3
LmRpZ2ljZXJ0LmNvbTE0MDIGA1UEAxMrRGlnaUNlcnQgU0hBMiBFeHRlbmRlZCBW
YWxpZGF0aW9uIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBANdTpARR+JmmFkhLZyeqk0nQOe0MsLAAh/FnKIaFjI5j2ryxQDji0/XspQUY
uD0+xZkXMuwYjPrxDKZkIYXLBxA0sFKIKx9om9KxjxKws9LniB8f7zh3VFNfgHk/
LhqqqB5LKw2rt2O5Nbd9FLxZS99RStKh4gzikIKHaq7q12TWmFXo/a8aUGxUvBHy
/Urynbt/DvTVvo4WiRJV2MBxNO723C3sxIclho3YIeSwTQyJ3DkmF93215SF2AQh
cJ1vb/9cuhnhRctWVyh+HA1BV6q3uCe7seT6Ku8hI3UarS2bhjWMnHe1c63YlC3k
8wyd7sFOYn4XwHGeLN7x+RAoGTMCAwEAAaOCAUkwggFFMBIGA1UdEwEB/wQIMAYB
Af8CAQAwDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEF
BQcDAjA0BggrBgEFBQcBAQQoMCYwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRp
Z2ljZXJ0LmNvbTBLBgNVHR8ERDBCMECgPqA8hjpodHRwOi8vY3JsNC5kaWdpY2Vy
dC5jb20vRGlnaUNlcnRIaWdoQXNzdXJhbmNlRVZSb290Q0EuY3JsMD0GA1UdIAQ2
MDQwMgYEVR0gADAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy5kaWdpY2VydC5j
b20vQ1BTMB0GA1UdDgQWBBQ901Cl1qCt7vNKYApl0yHU+PjWDzAfBgNVHSMEGDAW
gBSxPsNpA/i/RwHUmCYaCALvY2QrwzANBgkqhkiG9w0BAQsFAAOCAQEAnbbQkIbh
hgLtxaDwNBx0wY12zIYKqPBKikLWP8ipTa18CK3mtlC4ohpNiAexKSHc59rGPCHg
4xFJcKx6HQGkyhE6V6t9VypAdP3THYUYUN9XR3WhfVUgLkc3UHKMf4Ib0mKPLQNa
2sPIoc4sUqIAY+tzunHISScjl2SFnjgOrWNoPLpSgVh5oywM395t6zHyuqB8bPEs
1OG9d4Q3A84ytciagRpKkk47RpqF/oOi+Z6Mo8wNXrM9zwR4jxQUezKcxwCmXMS1
oVWNWlZopCJwqjyBcdmdqEU79OX2olHdx3ti6G8MdOu42vi/hw15UJGQmxg7kVkn
<span class="nv">8TUoE6smftX3eg</span><span class="o">==</span>
-----END CERTIFICATE-----
---
Server certificate
<span class="nv">subject</span><span class="o">=</span><span class="nv">businessCategory</span> <span class="o">=</span> Private Organization, <span class="nv">jurisdictionC</span> <span class="o">=</span> US, <span class="nv">jurisdictionST</span> <span class="o">=</span> Delaware, <span class="nv">serialNumber</span> <span class="o">=</span> 5157550, <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> San Francisco, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;GitHub, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> github.com

<span class="nv">issuer</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Extended Validation Server CA

---
No client certificate CA names sent
Peer signing digest: SHA256
Peer signature type: RSA-PSS
Server Temp Key: X25519, <span class="m">253</span> bits
---
SSL handshake has <span class="nb">read</span> <span class="m">3621</span> bytes and written <span class="m">376</span> bytes
Verification: OK
---
New, TLSv1.3, Cipher is TLS_AES_128_GCM_SHA256
Server public key is <span class="m">2048</span> bit
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
Early data was not sent
Verify <span class="k">return</span> code: <span class="m">0</span> <span class="o">(</span>ok<span class="o">)</span>
---
DONE
</code></pre></td></tr></table>
</div>
</div></details>
<h2 id="实施手段">实施手段</h2>
<p>通过检查网络和对出现的状况的分析，我认为这次MITM不是通过sni或者返回的证书进行的，而是直接针对某些ip的443端口进行的</p>
<p>通过控制这些ip的路由，让流量经过某些恶意节点，在某个恶意节点针对443端口进行MITM，而不检查实际访问的域名和返回的证书</p>
<p>并且这次事件所影响的github的ip并不全，通过doh或dot获取到国外服务器解析到的ip而不是国内使用的几个ip，可以正常访问github</p>
<h2 id="危害">危害</h2>
<p>使用TLS是保证我们访问网站时信息不被中间人窥探和篡改的有效手段，如果TLS用来加密通讯使用的证书出现问题，那么信息安全就无从谈起</p>
<p>TLS使用公钥密码算法交换后面数据进行对称加密使用的秘钥，作为中间人没有服务器上的私钥就无法解密获得后面加密使用的秘钥，所以即使截获到https的数据报文，也无法解密和篡改传输的内容</p>
<p>而本次事件使用的手法是MITM常用手法，通常情况下我们为了抓包和改包，会自己签署一个假的证书并导入自己被抓包设备的信任证书列表，然后中间人分别与服务器和客户端建立TLS连接，简单来说，中间人作为客户端从服务器获取内容，然后作为服务器向真正的客户端传输修改后的内容</p>
<p>所以如果我们信任了浏览器给出的警告，就会导致我们的信息包括github用户名、邮箱、密码、token和私有库泄露</p>
<h2 id="如何防范">如何防范</h2>
<p>作为站长，首先可以确定的是，并没有什么用户无痛(无需用户进行任何操作和设置)的办法来绕过这类针对性的MITM攻击，如果需要保护用户的隐私，建议开启域名的HSTS策略，这样浏览器检查到证书错误时的警告页面上就不会显示 <code>忽略警告</code> 相关按钮，防止不懂的用户忽略安全警告进行访问，避免隐私数据泄露</p>
<p>当然，像昨天那种针对 Github Pages 的攻击只会导致用户无法访问，并不会带来隐私泄露，因为github pages是提供静态网页托管，根本不需要用户输入隐私数据</p>
<p>作为访客，因为这种中间人攻击肯定发生在路由路径的某一个节点处，所以我们可以使用代理绕过这个恶意节点，这应该是目前最简单最好用的方法了</p>
<p>同时，当我们在浏览器中发现此类警告，除非是对证书内容充分信任(如自己为了调试而签发的证书)，否则不要忽视任何此类的警告而强行访问，否则隐私信息泄露在所难免</p>
<blockquote>
<p>因为我自己访问国外网站一直是使用代理，所以本次事件对我的影响几乎等于零
因为不受影响，所以也很难在第一时间发现这类事件，后续需要准备一个监控系统了</p>
</blockquote>
]]></description></item><item><title>使用Github Actions对Hexo博客自动部署</title><link>https://lgf.im/posts/coding/use-github-actions-to-auto-deploy-hexo/</link><pubDate>Sat, 21 Mar 2020 09:24:56 +0000</pubDate><author>作者</author><guid>https://lgf.im/posts/coding/use-github-actions-to-auto-deploy-hexo/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>很多同学和我一样也在用Hexo搭建自己的博客，通常最后发布的操作是 <code>hexo g</code> 生成静态网页，然后 <code>hexo d</code> 将public目录推送到github、coding、gitee等平台。</p>
<p>但是很多时候我们都想偷个懒，只管写博客，写完后将git 一 push，后面的生成部署工作让程序自动完成，github actions为我们提供了这个便利。</p>
<h2 id="操作">操作</h2>
<h3 id="开启actions功能">开启actions功能</h3>
<p>在我们博客的github仓库顶部可以找到 Actions 菜单，在里面我们可以搜索、选择各种预备好的actions模板，也可以点击 <code>Set up a workflow yourself</code> 按钮创建自己的工作流。</p>
<p></p>
<p>这里我的部署工作稍微复杂点，所以选择自己编写工作流配置文件。</p>
<p>在手动编写面板的右侧可以搜索别人写好的各种actions，方便我们使用这些actions配置一些基本的工作</p>
<p></p>
<p>当然，也可以选择在 hexo 根目录下创建 <code>.github/workflows</code> 目录，并在里面编写github actions配置文件的方法来开启这个功能。</p>
<h3 id="基本部署">基本部署</h3>
<p>首先我们需要将git库的代码检出到github actions提供的容器中，这里使用github提供的checkout步骤</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml">- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@master</span><span class="w">
</span><span class="w">  </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>因为hexo需要依赖node.js环境，所以我们还要安装node环境</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml">- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/setup-node@master</span><span class="w">
</span><span class="w">  </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">node-version</span><span class="p">:</span><span class="w"> </span><span class="m">12.</span><span class="l">x</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>有了node环境后我们需要安装各种依赖包</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml">- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Installation</span><span class="w">
</span><span class="w">  </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="sd">|
</span><span class="sd">    npm install
</span><span class="sd">    npm install -g hexo-cli
</span></code></pre></td></tr></table>
</div>
</div><p>依赖装好后就可以执行命令生成静态网站了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml">- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Generate</span><span class="w">
</span><span class="w">  </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hexo clean &amp;&amp; hexo g</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>最后一步就是将生成的public目录推到github仓库的page分支上，这样github pages就会将最新的网站自动部署了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml">- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span><span class="w">  </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span><span class="w">  </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">github_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.GITHUB_TOKEN }}</span><span class="w">
</span><span class="w">    </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span><span class="w">    </span><span class="nt">cname</span><span class="p">:</span><span class="w"> </span><span class="l">g.blog.lgf.im</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><h3 id="增加更多功能">增加更多功能</h3>
<p>在github actions工作流中，还可以完成更多更复杂的操作，里面可以直接执行shell脚本，可以使用docker镜像提供的特殊环境，大家可以根据自己需求进行修改。</p>
<h2 id="完整配置文件">完整配置文件</h2>
<p>我的配置文件是适合我自己博客用的，里面还包括了网页、js、css、图片的压缩，cdn链接的替换，自动打release方便绕过jsDelivr的缓存。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yml" data-lang="yml"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Hexo CICD</span><span class="w">
</span><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="l">master</span><span class="w">
</span><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">hexo build &amp; deploy</span><span class="w">
</span><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-18.04</span><span class="w">
</span><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@master</span><span class="w">
</span><span class="w">      </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">    </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/setup-node@master</span><span class="w">
</span><span class="w">      </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">node-version</span><span class="p">:</span><span class="w"> </span><span class="m">12.</span><span class="l">x  </span><span class="w">
</span><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">replace cdn url</span><span class="w">
</span><span class="w">      </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">replace</span><span class="w">
</span><span class="w">      </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="sd">|
</span><span class="sd">        tagname=$(date +%y%j%H%M)
</span><span class="sd">        sed -i &#34;s/hexoblog/hexoblog@$tagname/g&#34; _config.yml
</span><span class="sd">        sed -i &#34;s/hexoblog/hexoblog@$tagname/g&#34; themes/cactus/_config.yml
</span><span class="sd">        echo &#34;::set-output name=tagname::$tagname&#34;
</span><span class="sd">    - name: Installation
</span><span class="sd">      run: |
</span><span class="sd">        npm install
</span><span class="sd">        npm install -g hexo-cli gulp
</span><span class="sd">    - name: Generate
</span><span class="sd">      run: hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d
</span><span class="sd">    - name: Deploy
</span><span class="sd">      uses: peaceiris/actions-gh-pages@v3
</span><span class="sd">      with:
</span><span class="sd">        github_token: ${{ secrets.GITHUB_TOKEN }}
</span><span class="sd">        publish_dir: ./public
</span><span class="sd">        cname: g.blog.lgf.im
</span><span class="sd">    - name: Create Release
</span><span class="sd">      uses: actions/create-release@latest
</span><span class="sd">      env:
</span><span class="sd">        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
</span><span class="sd">      with:
</span><span class="sd">        tag_name: ${{ steps.replace.outputs.tagname }}
</span><span class="sd">        release_name: ${{ steps.replace.outputs.tagname }}
</span><span class="sd">        body: Automatic generated
</span><span class="sd">        draft: false
</span><span class="sd">        prerelease: true
</span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>在github actions将page专用分支更新后，zeit\netlify\github pages三个平台都会自动将最新的内容部署上，这样我就只需要关注博客内容，后续操作都不需要管了</p>
</blockquote>
]]></description></item><item><title>加快Github Pages国内访问速度</title><link>https://lgf.im/posts/coding/speedup-github-page/</link><pubDate>Thu, 19 Mar 2020 17:17:53 +0000</pubDate><author>作者</author><guid>https://lgf.im/posts/coding/speedup-github-page/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>相信不少小伙伴都在使用 Github Pages 提供的免费静态网站托管来搭建自己的博客，但是因为墙的存在和特殊国情，使用 Github Pages 搭建的网站速度普遍不快，因此很多小伙伴只能转战国内付费的服务器和 CDN。</p>
<p>正巧我也在使用 Github Pages 搭建自己的静态博客，正好来说一下我的优化方法。</p>
<h2 id="压缩">压缩</h2>
<p>默认情况下，如果我们查看 Hexo 生成的静态网页源代码，会发现存在大量的空格、空行、注释等无用内容。同样的，如果使用的 hexo 主题没有进行优化，大量的 css 和 js 文件也存在这样的垃圾内容。</p>
<p>如果你在一些大型网站右键查看网页源代码，你会发现他们的 html\js\css 是经过压缩处理的，没有多余的换行和注释，这势必会节省带宽流量和传输时间，提升用户体验。</p>
<p>所以我们优化速度的第一关就是对 Hexo 生成的代码进行压缩。</p>
<p>这里我使用的工具是 gulp</p>
<h3 id="安装-gulp">安装 gulp</h3>
<p>在自己本机安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install gulp -g
</code></pre></td></tr></table>
</div>
</div><p>为了 Github Action 或其他 CI\CD 平台也能够进行安装，这里推荐</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install gulp --save-dev
</code></pre></td></tr></table>
</div>
</div><p>我们还需要一些依赖</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install --save-dev <span class="se">\
</span><span class="se"></span>            gulp-minify-css <span class="se">\
</span><span class="se"></span>            gulp-babel <span class="se">\
</span><span class="se"></span>            gulp-uglify <span class="se">\
</span><span class="se"></span>            gulp-htmlmin <span class="se">\
</span><span class="se"></span>            gulp-htmlclean <span class="se">\
</span><span class="se"></span>            gulp-imagemin <span class="se">\
</span><span class="se"></span>            imagemin-jpegtran <span class="se">\
</span><span class="se"></span>            imagemin-svgo <span class="se">\
</span><span class="se"></span>            imagemin-gifsicle <span class="se">\
</span><span class="se"></span>            imagemin-optipng
</code></pre></td></tr></table>
</div>
</div><h3 id="创建配置文件">创建配置文件</h3>
<p>在博客 hexo 的根目录下，新建 <code>gulpfile.js</code> 配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">gulp</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp&#34;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">minifycss</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp-minify-css&#34;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">uglify</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp-uglify&#34;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">htmlmin</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp-htmlmin&#34;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">htmlclean</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp-htmlclean&#34;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">imagemin</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;gulp-imagemin&#34;</span><span class="p">);</span>

<span class="c1">// 压缩css文件
</span><span class="c1"></span><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s2">&#34;minify-css&#34;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">gulp</span>
    <span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s2">&#34;./public/**/*.css&#34;</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">minifycss</span><span class="p">())</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">));</span>
<span class="p">});</span>

<span class="c1">// 压缩html
</span><span class="c1"></span><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s2">&#34;minify-html&#34;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">gulp</span>
    <span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s2">&#34;./public/**/*.html&#34;</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">htmlclean</span><span class="p">())</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span>
      <span class="nx">htmlmin</span><span class="p">({</span>
        <span class="nx">collapseWhitespace</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">collapseBooleanAttributes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">removeComments</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">removeEmptyAttributes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">removeScriptTypeAttributes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">removeStyleLinkTypeAttributes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">minifyJS</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">minifyCSS</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">minifyURLs</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="nx">ignoreCustomFragments</span><span class="o">:</span> <span class="p">[</span><span class="sr">/\{\{[\s\S]*?\}\}/</span><span class="p">],</span>
      <span class="p">})</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">));</span>
<span class="p">});</span>

<span class="c1">// 压缩js文件
</span><span class="c1"></span><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s2">&#34;minify-js&#34;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">gulp</span>
    <span class="p">.</span><span class="nx">src</span><span class="p">([</span><span class="s2">&#34;./public/**/*.js&#34;</span><span class="p">,</span> <span class="s2">&#34;!./public/js/**/*min.js&#34;</span><span class="p">])</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">uglify</span><span class="p">())</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">));</span>
<span class="p">});</span>

<span class="c1">// 压缩图片
</span><span class="c1"></span><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s2">&#34;minify-images&#34;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">gulp</span>
    <span class="p">.</span><span class="nx">src</span><span class="p">([</span>
      <span class="s2">&#34;./public/**/*.png&#34;</span><span class="p">,</span>
      <span class="s2">&#34;./public/**/*.jpg&#34;</span><span class="p">,</span>
      <span class="s2">&#34;./public/**/*.gif&#34;</span><span class="p">,</span>
      <span class="s2">&#34;./public/**/*.svg&#34;</span><span class="p">,</span>
    <span class="p">])</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span>
      <span class="nx">imagemin</span><span class="p">([</span>
        <span class="nx">imagemin</span><span class="p">.</span><span class="nx">gifsicle</span><span class="p">({</span> <span class="nx">interlaced</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}),</span>
        <span class="nx">imagemin</span><span class="p">.</span><span class="nx">mozjpeg</span><span class="p">({</span> <span class="nx">quality</span><span class="o">:</span> <span class="mi">75</span><span class="p">,</span> <span class="nx">progressive</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}),</span>
        <span class="nx">imagemin</span><span class="p">.</span><span class="nx">optipng</span><span class="p">({</span> <span class="nx">optimizationLevel</span><span class="o">:</span> <span class="mi">5</span> <span class="p">}),</span>
        <span class="nx">imagemin</span><span class="p">.</span><span class="nx">svgo</span><span class="p">({</span>
          <span class="nx">plugins</span><span class="o">:</span> <span class="p">[{</span> <span class="nx">removeViewBox</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">cleanupIDs</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}],</span>
        <span class="p">}),</span>
      <span class="p">])</span>
    <span class="p">)</span>
    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">));</span>
<span class="p">});</span>

<span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span>
  <span class="s2">&#34;default&#34;</span><span class="p">,</span>
  <span class="nx">gulp</span><span class="p">.</span><span class="nx">series</span><span class="p">(</span>
    <span class="nx">gulp</span><span class="p">.</span><span class="nx">parallel</span><span class="p">(</span><span class="s2">&#34;minify-html&#34;</span><span class="p">,</span> <span class="s2">&#34;minify-css&#34;</span><span class="p">,</span> <span class="s2">&#34;minify-js&#34;</span><span class="p">,</span> <span class="s2">&#34;minify-images&#34;</span><span class="p">)</span>
  <span class="p">)</span>
<span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="使用方法">使用方法</h3>
<p>在使用 <code>hexo g</code> 生成静态网站后， 运行 <code>gulp</code> 进行压缩</p>
<h2 id="使用-cdn">使用 CDN</h2>
<p>如果你查看博客的网络请求内容，你会发现在 html 加载之后，还有一堆小文件等待加载，而这些 css\js\图片文件的加载占据了大部分的网页打开时间。</p>
<p>因为 Github Pages 的延迟巨大，速度极慢，我们更有必要使用国内的 CDN 对这些资源进行分发。</p>
<p>不想使用国内付费的 CDN 服务，我尝试过使用 CloudFlare 进行加速（实质减速）效果不佳，后来发现了 jsDelivr。</p>
<p>jsDelivr 是一家开源免费 CDN，主要是对 npm 包进行 CDN 分发</p>
<p>绝妙的是它还能对 Github 和 Wordpress 进行 CDN 分发</p>
<p>我们可以借助 jsDelivr 的 Github 资源分发 服务来对我们博客中的 css\js\小图片进行加速</p>
<blockquote>
<p>这是我目前找到的唯一一家在国内有节点并且不需要备案的 CDN 分发服务</p>
</blockquote>
<p>这里我就以我使用的主题为例，分享一下我如何使用 jsDelivr 进行 CDN 分发</p>
<h3 id="链接格式">链接格式</h3>
<p>jsDelivr 针对 Github 资源有众多 URL 格式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">https://cdn.jsdelivr.net/gh/user/repo@version/file
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery/
</code></pre></td></tr></table>
</div>
</div><p>考虑到 jsDelivr 默认缓存时间是 7 天，如果我们想要修改实时生效而不需要等到缓存过期，最适合的是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js

https://cdn.jsdelivr.net/gh/ github用户名 / 库名 @ 版本号或者tag / 路径/文件名
</code></pre></td></tr></table>
</div>
</div><p>我们可以通过打 tag 来访问同一个资源文件的不同版本，而不需要考虑缓存时间</p>
<h3 id="替换链接">替换链接</h3>
<p>大部分 hexo 主题并不会对使用到的 js\css\图片\字体 套上 CDN，我们来手动替换</p>
<h4 id="css-样式表">css 样式表</h4>
<p>大部分 css 样式会在 <code>head</code> 标签里面引入，这里的 css 样式表会阻塞页面的渲染，导致打开慢的体验，所以需要特别注意</p>
<p>我将我使用的主题的 style.css \ rtl.css \ disquesjs.css 替换成 jsDelivr，明显提升了等待时间</p>
<p></p>
<p>还有一些其他地方的 css 引入</p>
<p></p>
<h4 id="js-脚本">js 脚本</h4>
<p>寻找并替换各种调用到的 js 脚本</p>
<p></p>
<p>main.js</p>
<p></p>
<p>disqusjs.js</p>
<p></p>
<p>还有其他的一些地方，不一一列举了</p>
<h4 id="字体">字体</h4>
<p>字体需要特别注意，通常情况下比较大，耗时比较长</p>
<p></p>
<p>我使用的主题使用的字体通过 <code>all.min.css</code> 引入，因为前面这个 css 样式已经通过 jsDelivr 导入，里面的字体使用的是相对链接，所以字体默认也是通过 jsDelivr 引入了</p>
<h4 id="img-小图片">img 小图片</h4>
<p>一般是 logo 等资源，根据主题自行替换</p>
<blockquote>
<p>更新：为了更好的控制版本和决定是否使用 jsDelivr, 可以将这个地方独立出来放到配置文件里</p>
</blockquote>
<p>_config.yml</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">cdn</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">  </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="l">https://cdn.jsdelivr.net/gh/zu1k/blog@0.0.1.2</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>用到的地方</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">&lt;!-- styles --&gt;
&lt;% if (theme.cdn.enabled) { %&gt;
  &lt;link rel=&#34;stylesheet&#34; href=&#34;&lt;%= theme.cdn.url %&gt;/css/style.css&#34;&gt;
&lt;% } else { %&gt;
  &lt;%- css(&#39;css/style&#39;) %&gt;
&lt;% } %&gt;

其他的地方同样的方法
</code></pre></td></tr></table>
</div>
</div><h2 id="加载时文字可见">加载时文字可见</h2>
<p>无论怎样优化，字体加载的时间无法忽略，这段时间的网页文字显示为空，这给用户带来卡顿感</p>
<p>我们必须使字体加载时文字可见，这样才能弥补 github pages 的慢</p>
<p>具体方法是将各 <code>@font-face</code> 中 <code>font-display</code> 设置为 <code>swap</code>, 这样可以在字体未加载完时临时使用系统字体替代，加载完后重新渲染字体</p>
<p></p>
<p>每一个地方都需要改，自己搜索吧</p>
<h2 id="使用-disqusjs">使用 DisqusJS</h2>
<p>由于众所周知的原因，disqus 被墙了，国内访问不了，而大部分 hexo 网站都使用 disqus 作为评论系统，这导致网页会卡在评论区的加载上，虽然网页已经加载完了，但进度条还在进行，给用户带来慢的感觉。</p>
<p>并且，即使有的用户翻墙能够访问 Disqus，但 Disqus 本身非常笨重，各种 CSS/JS/Font/API 加起来请求不小于 2MB，当 Disqus 加载时，浏览器会在主线程中同步解析、渲染 Disqus，造成卡顿感。</p>
<p>在上网搜索之后，找到了一个替代方案，那就是苏卡卡大佬的 DisqusJS，大家可以根据教程对自己博客的主题进行修改</p>
<p>参考链接：</p>
<ul>
<li><a href="https://blog.skk.moe/post/disqusjs/">https://blog.skk.moe/post/disqusjs/</a></li>
<li><a href="https://disqusjs.skk.moe/">https://disqusjs.skk.moe/</a></li>
<li><a href="https://github.com/SukkaW/DisqusJS">https://github.com/SukkaW/DisqusJS</a></li>
</ul>
<p>对于使用的 Disqus API 反代，我自己测试发现苏卡卡大佬提供的速度不太行，不知道是什么原因，所以推荐自己进行搭建，我是用的是 zeit 进行搭建，感觉还不错</p>
<blockquote>
<p>如果 disqusJS 默认样式不适合自己的主题，推荐 fork 原库进行修改，注意要使用 1.2.6，最新的 master 在懒加载上有点问题</p>
</blockquote>
<h2 id="使用懒加载">使用懒加载</h2>
<p>如果图片和评论区随着页面在一开始就加载，势必会拖累网页首次渲染和文字的迅速显示，这里最好的办法是使用懒加载技术</p>
<h3 id="图片懒加载">图片懒加载</h3>
<p>对于图片，我使用了 <code>hexo-lazyload-image</code> 这个插件</p>
<p>安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install hexo-lazyload-image --save
</code></pre></td></tr></table>
</div>
</div><p>配置文件中添加</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">lazyload:
  enable: <span class="nb">true</span>
  onlypost: <span class="nb">false</span>
  loadingImg: https://cdn.jsdelivr.net/gh/zu1k/blog@0.0.1.2/images/loading.png
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>顺便给懒加载添加了 cdn 功能，可以替换成 cdn 链接来加速</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">npm install hexo-lazyload-image-cdn --save
</code></pre></td></tr></table>
</div>
</div><p>配置文件中添加</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">lazyload:
  enable: <span class="nb">true</span>
  onlypost: <span class="nb">false</span>
  loadingImg: <span class="c1"># eg ./images/loading.gif</span>
  cdn:
    enabled: <span class="nb">false</span>
    url: https://cdn.com
</code></pre></td></tr></table>
</div>
</div><h3 id="评论懒加载">评论懒加载</h3>
<p>对于评论区，很多情况下用户根本不会划到页面底部（文章写得太烂没人看得下去）。</p>
<p>所以我这里对 disqus 的加载使用懒加载技术，参考 <a href="https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/">https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/</a></p>
<p>我使用的是 disqusJS, 下面给出加载的 js 代码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c">&lt;!--</span> <span class="nx">DisqusJS</span> <span class="nx">Comments</span> <span class="o">--&gt;</span>
<span class="o">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="nx">theme</span><span class="p">.</span><span class="nx">disqusjs</span><span class="p">.</span><span class="nx">enabled</span> <span class="o">&amp;&amp;</span> <span class="nx">theme</span><span class="p">.</span><span class="nx">disqusjs</span><span class="p">.</span><span class="nx">shortname</span><span class="p">){</span> <span class="o">%&gt;</span>
  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">crossorigin</span> <span class="nx">defer</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&#34;https://cdn.jsdelivr.net/gh/zu1k/DisqusJS@1.2.6.3/dist/disqus.js&#34;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&#34;disqusjs-script&#34;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
  <span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;disqusjs-script&#34;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&#34;load&#34;</span><span class="p">,</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="nx">setTimeout</span><span class="p">(</span>
        <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
          <span class="kd">function</span> <span class="nx">t</span><span class="p">()</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">dsqjs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DisqusJS</span><span class="p">({</span>
                  <span class="nx">shortname</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.shortname %&gt;&#39;</span><span class="p">,</span>
                  <span class="nx">siteName</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.siteName %&gt;&#39;</span><span class="p">,</span>
                  <span class="nx">api</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.api %&gt;&#39;</span><span class="p">,</span>
                  <span class="nx">apikey</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.apikey %&gt;&#39;</span><span class="p">,</span>
                  <span class="nx">admin</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.admin %&gt;&#39;</span><span class="p">,</span>
                  <span class="nx">adminLabel</span><span class="o">:</span> <span class="s1">&#39;&lt;%= theme.disqusjs.adminLabel %&gt;&#39;</span>
              <span class="p">});</span>
          <span class="p">}</span>
          <span class="kd">var</span> <span class="nx">runningOnBrowser</span> <span class="o">=</span> <span class="k">typeof</span> <span class="nb">window</span> <span class="o">!==</span> <span class="s2">&#34;undefined&#34;</span><span class="p">;</span>
          <span class="kd">var</span> <span class="nx">isBot</span> <span class="o">=</span> <span class="nx">runningOnBrowser</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="p">(</span><span class="s2">&#34;onscroll&#34;</span> <span class="k">in</span> <span class="nb">window</span><span class="p">)</span> <span class="o">||</span> <span class="k">typeof</span> <span class="nx">navigator</span> <span class="o">!==</span> <span class="s2">&#34;undefined&#34;</span> <span class="o">&amp;&amp;</span> <span class="sr">/(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">);</span>
          <span class="kd">var</span> <span class="nx">supportsIntersectionObserver</span> <span class="o">=</span> <span class="nx">runningOnBrowser</span> <span class="o">&amp;&amp;</span> <span class="s2">&#34;IntersectionObserver&#34;</span> <span class="k">in</span> <span class="nb">window</span><span class="p">;</span>
          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isBot</span> <span class="o">&amp;&amp;</span> <span class="nx">supportsIntersectionObserver</span><span class="p">)</span> <span class="p">{</span>
              <span class="kd">var</span> <span class="nx">disqus_observer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">IntersectionObserver</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">entries</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">entries</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">isIntersecting</span><span class="p">)</span> <span class="p">{</span>
                  <span class="nx">t</span><span class="p">();</span>
                  <span class="nx">disqus_observer</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span>
                <span class="p">}</span>
              <span class="p">},</span> <span class="p">{</span> <span class="nx">threshold</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">});</span>
              <span class="nx">disqus_observer</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;disqus_thread&#39;</span><span class="p">));</span>
          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nx">t</span><span class="p">();</span>
          <span class="p">}</span>
      <span class="p">},</span> <span class="mi">1</span><span class="p">);</span>
    <span class="p">},</span><span class="o">!</span><span class="mi">0</span>
  <span class="p">);</span>
  <span class="o">&lt;</span><span class="err">/script&gt;</span>
<span class="o">&lt;%</span> <span class="p">}</span> <span class="o">%&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="终极大招">终极大招</h2>
<p>如果经过上面的优化，你还对博客的加载速度不满意，那一定是 github pages 服务器在美国的原因，200+ms 的延迟导致首字节返回时间不短</p>
<p>其实支持通过 Github 仓库代码进行构建，部署为静态网站的平台不值 github pages 一家，我使用过的比较好的是 <code>zeit.co</code> ， 国内访问走的是台湾的 gcp 节点，延迟低速度快，推荐</p>
<p>具体使用方法非常简单，自行摸索吧</p>
<blockquote>
<p>更新: 刚知道，如果更新太快的话，zeit 会暂停构建部署的</p>
<p>You are pushing commits at a very fast pace (across the whole organization).<br>
Due to that, we cannot deploy the commit e80751b.</p>
<p>You can try again later or upgrade your plan.</p>
</blockquote>
<h2 id="辅助优化">辅助优化</h2>
<p>使用谷歌提供的 <a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener noreffer">Pagespeed Insights</a> 工具分析网页加载并根据建议进行优化</p>
]]></description></item></channel></rss>