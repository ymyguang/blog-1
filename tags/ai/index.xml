<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AI - 标签 - zu1k</title><link>https://lgf.im/tags/ai/</link><description>AI - 标签 - zu1k</description><generator>Hugo -- gohugo.io</generator><managingEditor>i@lgf.im (zu1k)</managingEditor><webMaster>i@lgf.im (zu1k)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 14 Oct 2018 15:58:56 +0000</lastBuildDate><atom:link href="https://lgf.im/tags/ai/" rel="self" type="application/rss+xml"/><item><title>人脸检测与识别基础教程</title><link>https://lgf.im/posts/ai/face-detection-and-recognition-basic-tutorial/</link><pubDate>Sun, 14 Oct 2018 15:58:56 +0000</pubDate><author>作者</author><guid>https://lgf.im/posts/ai/face-detection-and-recognition-basic-tutorial/</guid><description><![CDATA[<p>这里我们将要介绍如何使用python进行简单的人脸检测与人脸识别，并且通过gpu来加速。</p>
<p>注意：这里都是基础内容，如果需要更加强大深入的请出门左转。</p>
<h2 id="一环境搭建与资源下载">一、环境搭建与资源下载</h2>
<p>下面介绍简单人脸检测与识别需要使用到的几个重要依赖。</p>
<h3 id="基础环境">基础环境</h3>
<p>我所使用的环境是windows 10 + python3.6(64位)</p>
<h3 id="python库">python库</h3>
<ol>
<li>numpy</li>
<li>OpenCV</li>
<li>Dlib</li>
<li>face_recognition</li>
<li>haarcascades</li>
<li>shape_predictor</li>
</ol>
<blockquote>
<p><strong>小基础</strong><br>
python安装依赖可以选择在线安装，如 <code>pip install 依赖名</code><br>
也可以选择使用whl文件安装，如 <code>pip install whl文件位置</code></p>
</blockquote>
<h4 id="1-python扩展程序集numpyhttpswwwlfduciedugohlkepythonlibsnumpy">1. python扩展程序集：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy" target="_blank" rel="noopener noreffer">numpy</a></h4>
<p>基于我的环境，我使用的是<code>numpy‑1.15.2+mkl‑cp36‑cp36m‑win_amd64.whl</code>这个版本，大家可以根据自己环境选择适合自己的版本下载。</p>
<p>安装使用命令 <code>pip3 install numpy‑1.15.2+mkl‑cp36‑cp36m‑win_amd64.whl</code></p>
<h4 id="2-计算机视觉库opencvhttpswwwlfduciedugohlkepythonlibsopencv">2. 计算机视觉库：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv" target="_blank" rel="noopener noreffer">OpenCV</a></h4>
<p>我使用的是<code>opencv_python‑3.4.3‑cp36‑cp36m‑win_amd64.whl</code>这个版本。</p>
<p>安装使用命令 <code>pip3 install opencv_python‑3.4.3‑cp36‑cp36m‑win_amd64.whl</code></p>
<h4 id="3-机器学习c算法库dlibhttpspypiorgsimpledlib">3. 机器学习c++算法库：<a href="https://pypi.org/simple/dlib/" target="_blank" rel="noopener noreffer">Dlib</a></h4>
<p>我使用的是<code>dlib-19.8.1-cp36-cp36m-win_amd64.whl</code>。</p>
<p>安装使用命令 <code>pip3 install dlib-19.8.1-cp36-cp36m-win_amd64.whl</code></p>
<h4 id="4-人脸识别集成库face_recognitionhttpsgithubcomageitgeyface_recognition">4. 人脸识别集成库：<a href="https://github.com/ageitgey/face_recognition" target="_blank" rel="noopener noreffer">face_recognition</a></h4>
<p>安装使用命令 <code>pip3 install face_recognition</code></p>
<h4 id="5-深度学习库kerashttpskerasio">5. 深度学习库：<a href="https://keras.io/" target="_blank" rel="noopener noreffer">Keras</a></h4>
<p>安装使用命令 <code>pip3 install keras</code></p>
<p>前面部分用不到，后面高级应用会用到，可提前下载安装，也可后面需要的时候安装</p>
<h4 id="6-机器学习框架tensorflowhttpswwwtensorfloworghlzh-cn">6. 机器学习框架：<a href="https://www.tensorflow.org/?hl=zh-cn" target="_blank" rel="noopener noreffer">TensorFlow</a></h4>
<p>安装使用命令： <code>pip3 install tensorflow</code></p>
<p>前面部分用不到，后面高级应用会用到，可提前下载安装，也可后面需要的时候安装</p>
<h3 id="人脸识别用到的数据模型">人脸识别用到的数据模型</h3>
<p>基于目前的数据量和个人知识与能力，我还不能自己利用机器学习来训练数据模型，所以使用的是国外别人已经训练好的数据模型。</p>
<h4 id="1-opencv使用到的人脸分类模型xmlhaarcascadeshttpsgithubcomopencvopencvtreemasterdatahaarcascades">1. OpenCV使用到的人脸分类模型xml：<a href="https://github.com/opencv/opencv/tree/master/data/haarcascades" target="_blank" rel="noopener noreffer">haarcascades</a></h4>
<p>上面链接中所有的xml都推荐下载到本地备用，我所使用的是<code>haarcascade_frontalface_default.xml</code></p>
<h4 id="2-dlib使用到的人脸识别训练模型shape_predictorhttpdlibnetfiles">2. Dlib使用到的人脸识别训练模型：<a href="http://dlib.net/files/" target="_blank" rel="noopener noreffer">shape_predictor</a></h4>
<p>我所使用的是<code>shape_predictor_68_face_landmarks.dat.bz2</code>和<code>shape_predictor_5_face_landmarks.dat.bz2</code>这两个。</p>
<p>推荐大家把这两个都下载下来，并解压，我们所需要的是里面的<code>dat</code>数据文件。</p>
<blockquote>
<p>好了，有了上面的这些基础环境与依赖，我们可以继续我们接下来的简单人脸检测与识别了。
没有装好这些环境的同学请注意了，我们班级已经与谷歌、百度等大公司达成合作，有任何问题请在<a href="https://www.google.com" target="_blank" rel="noopener noreffer">Google</a>和<a href="https://www.baidu.com" target="_blank" rel="noopener noreffer">Baidu</a>进行搜索，他们会提供你所需要的答案。</p>
</blockquote>
<h2 id="二简单人脸检测">二、简单人脸检测</h2>
<blockquote>
<p>在这一节不会讲解复杂的人脸识别，只是先通过简单的小例子让大家先了解一下人脸识别需要用到什么、人脸识别的基本步骤等等最简单的内容。</p>
</blockquote>
<h3 id="1-利用opencv进行图片人脸检测并进行标注">1. 利用<strong>OpenCV</strong>进行<strong>图片</strong>人脸检测并进行标注</h3>
<h4 id="实现思路">实现思路</h4>
<ol>
<li>先将图片灰度化，为了降低图片颜色维度，减少后续识别计算量</li>
<li>然后利用OpenCV加载别人训练好的人脸分类器，通过这个分类器来检测人脸</li>
<li>在原图片上画一个矩形，然后显示出来</li>
</ol>
<h4 id="实现代码">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">filepath</span> <span class="o">=</span> <span class="s2">&#34;img/sdu/6.jpg&#34;</span>

<span class="n">classifier</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CascadeClassifier</span><span class="p">(</span>
    <span class="s2">&#34;lib/opencv/haarcascades/haarcascade_frontalface_default.xml&#34;</span>
<span class="p">)</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">filepath</span><span class="p">)</span>  <span class="c1"># 读取图片</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>  <span class="c1"># 灰度化</span>
<span class="n">color</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1"># 定义绘制颜色</span>

<span class="c1"># 调用识别人脸</span>
<span class="n">faceRects</span> <span class="o">=</span> <span class="n">classifier</span><span class="o">.</span><span class="n">detectMultiScale</span><span class="p">(</span>
    <span class="n">gray</span><span class="p">,</span> <span class="n">scaleFactor</span><span class="o">=</span><span class="mf">1.2</span><span class="p">,</span> <span class="n">minNeighbors</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">minSize</span><span class="o">=</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">))</span>
<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">faceRects</span><span class="p">):</span>  <span class="c1"># 大于0则检测到人脸</span>
    <span class="k">for</span> <span class="n">faceRect</span> <span class="ow">in</span> <span class="n">faceRects</span><span class="p">:</span>  <span class="c1"># 单独框出每一张人脸</span>
        <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span> <span class="o">=</span> <span class="n">faceRect</span>
        <span class="c1"># 框出人脸</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">h</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">w</span><span class="p">),</span> <span class="n">color</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="2-利用opencv进行视频人脸检测并进行标注">2. 利用<strong>OpenCV</strong>进行<strong>视频</strong>人脸检测并进行标注</h3>
<blockquote>
<p>在人脸检测方面实现方法与上面图片的实现方法一模一样，只是这个图片是从摄像头不断获取的。</p>
</blockquote>
<h4 id="实现代码-1">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>

<span class="k">def</span> <span class="nf">scan</span><span class="p">(</span><span class="n">img</span><span class="p">):</span>
    <span class="n">grayImg</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
    <span class="n">classifier</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CascadeClassifier</span><span class="p">(</span>
        <span class="s2">&#34;lib/opencv/haarcascades/haarcascade_frontalface_default.xml&#34;</span>
    <span class="p">)</span>
    <span class="n">color</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1"># 定义绘制颜色</span>
    <span class="n">faceRects</span> <span class="o">=</span> <span class="n">classifier</span><span class="o">.</span><span class="n">detectMultiScale</span><span class="p">(</span>
        <span class="n">grayImg</span><span class="p">,</span> <span class="n">scaleFactor</span><span class="o">=</span><span class="mf">1.2</span><span class="p">,</span> <span class="n">minNeighbors</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">minSize</span><span class="o">=</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">))</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">faceRects</span><span class="p">):</span>  <span class="c1"># 大于0则检测到人脸</span>
        <span class="k">for</span> <span class="n">faceRect</span> <span class="ow">in</span> <span class="n">faceRects</span><span class="p">:</span>  <span class="c1"># 单独框出每一张人脸</span>
            <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span> <span class="o">=</span> <span class="n">faceRect</span>
            <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">h</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">w</span><span class="p">),</span> <span class="n">color</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">ret</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">cap</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">scan</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;q&#39;</span><span class="p">):</span>
        <span class="k">break</span>

<span class="n">cap</span><span class="o">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="3-利用dlib进行图片人脸检测并标注">3. 利用<strong>Dlib</strong>进行<strong>图片</strong>人脸检测并标注</h3>
<blockquote>
<p>Dlib里面有很多算法，可以实现一些复杂的人脸识别。
在这一小节只演示用dlib内部自带的默认的人脸识别模型来进行人脸检测</p>
</blockquote>
<h4 id="实现代码-2">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">dlib</span>

<span class="n">path</span> <span class="o">=</span> <span class="s2">&#34;img/sdu/658.jpg&#34;</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>

<span class="c1">#人脸分类器</span>
<span class="n">detector</span> <span class="o">=</span> <span class="n">dlib</span><span class="o">.</span><span class="n">get_frontal_face_detector</span><span class="p">()</span>

<span class="n">dets</span> <span class="o">=</span> <span class="n">detector</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">for</span> <span class="n">face</span> <span class="ow">in</span> <span class="n">dets</span><span class="p">:</span>
    <span class="c1">#在图片中标注人脸边框，并显示</span>
    <span class="n">left</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">left</span><span class="p">()</span>
    <span class="n">top</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">top</span><span class="p">()</span>
    <span class="n">right</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">right</span><span class="p">()</span>
    <span class="n">bottom</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">bottom</span><span class="p">()</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">top</span><span class="p">),</span> <span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">bottom</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="4-利用dlib进行视频人脸检测并进行标注">4. 利用<strong>Dlib</strong>进行<strong>视频</strong>人脸检测并进行标注</h3>
<blockquote>
<p>都是相同的步骤呀，与上面大同小异</p>
</blockquote>
<h4 id="实现代码-3">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">dlib</span>

<span class="n">detector</span> <span class="o">=</span> <span class="n">dlib</span><span class="o">.</span><span class="n">get_frontal_face_detector</span><span class="p">()</span>  <span class="c1">#使用默认的人类识别器模型</span>

<span class="k">def</span> <span class="nf">scan</span><span class="p">(</span><span class="n">img</span><span class="p">):</span>
    <span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
    <span class="n">dets</span> <span class="o">=</span> <span class="n">detector</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">face</span> <span class="ow">in</span> <span class="n">dets</span><span class="p">:</span>
        <span class="n">left</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">left</span><span class="p">()</span>
        <span class="n">top</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">top</span><span class="p">()</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">right</span><span class="p">()</span>
        <span class="n">bottom</span> <span class="o">=</span> <span class="n">face</span><span class="o">.</span><span class="n">bottom</span><span class="p">()</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">top</span><span class="p">),</span> <span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">bottom</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">ret</span><span class="p">,</span> <span class="n">img</span> <span class="o">=</span> <span class="n">cap</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">scan</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;q&#39;</span><span class="p">):</span>
        <span class="k">break</span>

<span class="n">cap</span><span class="o">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>在两个视频中人脸检测中，我们发现<br>
在识别准确率上 Dlib &gt; OpenCV<br>
但是在速度上 OpenCV &gt; Dlib<br>
后面我们会有专门的内容讲解通过GPU加速Dlib</p>
</blockquote>
<h2 id="三稍微复杂的人脸检测与识别">三、稍微复杂的人脸检测与识别</h2>
<blockquote>
<p>上面已经介绍过了简单的从一张图片或视频中的每一帧中检测到人脸并进行画框<br>
在这一小节，我们会进一步利用Dlib这个库中更加强大的工具来实现稍微发杂一些的人脸检测任务</p>
</blockquote>
<h3 id="1-检测人脸的5个关键点和68个关键点并显示出来">1. 检测人脸的5个关键点和68个关键点并显示出来</h3>
<h4 id="实现代码-4">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">dlib</span>

<span class="n">path</span> <span class="o">=</span> <span class="s2">&#34;img/ag.png&#34;</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>

<span class="c1">#人脸分类器</span>
<span class="n">detector</span> <span class="o">=</span> <span class="n">dlib</span><span class="o">.</span><span class="n">get_frontal_face_detector</span><span class="p">()</span>
<span class="c1"># 获取人脸检测器</span>
<span class="n">predictor</span> <span class="o">=</span> <span class="n">dlib</span><span class="o">.</span><span class="n">shape_predictor</span><span class="p">(</span>
    <span class="s2">&#34;lib/dlib/shape_predictor_68_face_landmarks.dat&#34;</span> 
    <span class="c1">#这里使用68点的模型，将68改成5就是使用5点的模型</span>
<span class="p">)</span>

<span class="n">dets</span> <span class="o">=</span> <span class="n">detector</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">for</span> <span class="n">face</span> <span class="ow">in</span> <span class="n">dets</span><span class="p">:</span>
    <span class="n">shape</span> <span class="o">=</span> <span class="n">predictor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">face</span><span class="p">)</span>  <span class="c1"># 寻找人脸的68个标定点</span>
    <span class="c1"># 遍历所有点，打印出其坐标，并圈出来.</span>
    <span class="k">for</span> <span class="n">pt</span> <span class="ow">in</span> <span class="n">shape</span><span class="o">.</span><span class="n">parts</span><span class="p">():</span>
        <span class="n">pt_pos</span> <span class="o">=</span> <span class="p">(</span><span class="n">pt</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="n">pt</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">pt_pos</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>上人脸识别的主菜</p>
</blockquote>
<h3 id="2-利用face_recognition进行人脸识别">2. 利用<strong>face_recognition</strong>进行人脸识别</h3>
<h4 id="实现代码-5">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">face_recognition</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="n">path</span> <span class="o">=</span> <span class="s2">&#34;img/face_5107&#34;</span>
<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">total_image_name</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">total_face_encoding</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">fn</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>  <span class="c1">#fn 表示的是文件名q</span>
    <span class="k">print</span><span class="p">(</span><span class="n">path</span> <span class="o">+</span> <span class="s2">&#34;/&#34;</span> <span class="o">+</span> <span class="n">fn</span><span class="p">)</span>
    <span class="n">total_face_encoding</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
        <span class="n">face_recognition</span><span class="o">.</span><span class="n">face_encodings</span><span class="p">(</span>
            <span class="n">face_recognition</span><span class="o">.</span><span class="n">load_image_file</span><span class="p">(</span><span class="n">path</span> <span class="o">+</span> <span class="s2">&#34;/&#34;</span> <span class="o">+</span> <span class="n">fn</span><span class="p">))[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="n">fn</span><span class="p">[:(</span><span class="nb">len</span><span class="p">(</span><span class="n">fn</span><span class="p">)</span> <span class="o">-</span> <span class="mi">4</span><span class="p">)]</span>  <span class="c1">#截取图片名（这里应该把images文件中的图片名命名为为人物名）</span>
    <span class="n">total_image_name</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">fn</span><span class="p">)</span>  <span class="c1">#图片名字列表</span>
<span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">ret</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">cap</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    <span class="c1"># 发现在视频帧所有的脸和face_enqcodings</span>
    <span class="n">face_locations</span> <span class="o">=</span> <span class="n">face_recognition</span><span class="o">.</span><span class="n">face_locations</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
    <span class="n">face_encodings</span> <span class="o">=</span> <span class="n">face_recognition</span><span class="o">.</span><span class="n">face_encodings</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">face_locations</span><span class="p">)</span>
    <span class="c1"># 在这个视频帧中循环遍历每个人脸</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">top</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">bottom</span><span class="p">,</span> <span class="n">left</span><span class="p">),</span> <span class="n">face_encoding</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span>
            <span class="n">face_locations</span><span class="p">,</span> <span class="n">face_encodings</span><span class="p">):</span>
        <span class="c1"># 看看面部是否与已知人脸相匹配。</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">total_face_encoding</span><span class="p">):</span>
            <span class="n">match</span> <span class="o">=</span> <span class="n">face_recognition</span><span class="o">.</span><span class="n">compare_faces</span><span class="p">(</span>
                <span class="p">[</span><span class="n">v</span><span class="p">],</span> <span class="n">face_encoding</span><span class="p">,</span> <span class="n">tolerance</span><span class="o">=</span><span class="mf">0.4</span><span class="p">)</span>
            <span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Unknown&#34;</span>
            <span class="k">if</span> <span class="n">match</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
                <span class="n">name</span> <span class="o">=</span> <span class="n">total_image_name</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
                <span class="k">break</span>
        <span class="c1"># 画出一个框，框住脸</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">top</span><span class="p">),</span> <span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">bottom</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
        <span class="c1"># 画出一个带名字的标签，放在框下</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">bottom</span> <span class="o">-</span> <span class="mi">35</span><span class="p">),</span> <span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">bottom</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span>
                      <span class="n">cv2</span><span class="o">.</span><span class="n">FILLED</span><span class="p">)</span>
        <span class="n">font</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">FONT_HERSHEY_DUPLEX</span>
        <span class="n">cv2</span><span class="o">.</span><span class="n">putText</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="p">(</span><span class="n">left</span> <span class="o">+</span> <span class="mi">6</span><span class="p">,</span> <span class="n">bottom</span> <span class="o">-</span> <span class="mi">6</span><span class="p">),</span> <span class="n">font</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span>
                    <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">1</span><span class="p">)</span>
    <span class="c1"># 显示结果图像</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s1">&#39;Video&#39;</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s1">&#39;q&#39;</span><span class="p">):</span>
        <span class="k">break</span>

<span class="n">cap</span><span class="o">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="3-利用face_recognition进行人脸轮廓绘制">3. 利用<strong>face_recognition</strong>进行人脸轮廓绘制</h3>
<h4 id="代码实现">代码实现</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">face_recognition</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span><span class="p">,</span> <span class="n">ImageDraw</span>

<span class="c1"># 将图片文件加载到numpy 数组中</span>
<span class="n">image</span> <span class="o">=</span> <span class="n">face_recognition</span><span class="o">.</span><span class="n">load_image_file</span><span class="p">(</span><span class="s2">&#34;img/ag.png&#34;</span><span class="p">)</span>

<span class="c1">#查找图像中所有面部的所有面部特征</span>
<span class="n">face_landmarks_list</span> <span class="o">=</span> <span class="n">face_recognition</span><span class="o">.</span><span class="n">face_landmarks</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>

<span class="k">for</span> <span class="n">face_landmarks</span> <span class="ow">in</span> <span class="n">face_landmarks_list</span><span class="p">:</span>
    <span class="n">facial_features</span> <span class="o">=</span> <span class="p">[</span>
        <span class="s1">&#39;chin&#39;</span><span class="p">,</span>  <span class="c1"># 下巴</span>
        <span class="s1">&#39;left_eyebrow&#39;</span><span class="p">,</span>  <span class="c1"># 左眉毛</span>
        <span class="s1">&#39;right_eyebrow&#39;</span><span class="p">,</span>  <span class="c1"># 右眉毛</span>
        <span class="s1">&#39;nose_bridge&#39;</span><span class="p">,</span>  <span class="c1"># 鼻樑</span>
        <span class="s1">&#39;nose_tip&#39;</span><span class="p">,</span>  <span class="c1"># 鼻尖</span>
        <span class="s1">&#39;left_eye&#39;</span><span class="p">,</span>  <span class="c1"># 左眼</span>
        <span class="s1">&#39;right_eye&#39;</span><span class="p">,</span>  <span class="c1"># 右眼</span>
        <span class="s1">&#39;top_lip&#39;</span><span class="p">,</span>  <span class="c1"># 上嘴唇</span>
        <span class="s1">&#39;bottom_lip&#39;</span>  <span class="c1"># 下嘴唇</span>
    <span class="p">]</span>
    <span class="n">pil_image</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">fromarray</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">ImageDraw</span><span class="o">.</span><span class="n">Draw</span><span class="p">(</span><span class="n">pil_image</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">facial_feature</span> <span class="ow">in</span> <span class="n">facial_features</span><span class="p">:</span>
        <span class="n">d</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="n">face_landmarks</span><span class="p">[</span><span class="n">facial_feature</span><span class="p">],</span> <span class="n">fill</span><span class="o">=</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="n">width</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">pil_image</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="4-利用keras实现性别识别">4. 利用<strong>keras</strong>实现性别识别</h3>
<blockquote>
<p>使用keras实现性别识别<br>
模型数据使用的是<a href="https://github.com/oarriaga/face_classification" target="_blank" rel="noopener noreffer">oarriaga/face_classification的模型</a></p>
</blockquote>
<h4 id="实现代码-6">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">load_model</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">chineseText</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="s2">&#34;img/xingye-1.png&#34;</span><span class="p">)</span>
<span class="n">face_classifier</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CascadeClassifier</span><span class="p">(</span>
    <span class="s2">&#34;lib/opencv/haarcascades/haarcascade_frontalface_default.xml&#34;</span>
<span class="p">)</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
<span class="n">faces</span> <span class="o">=</span> <span class="n">face_classifier</span><span class="o">.</span><span class="n">detectMultiScale</span><span class="p">(</span>
    <span class="n">gray</span><span class="p">,</span> <span class="n">scaleFactor</span><span class="o">=</span><span class="mf">1.2</span><span class="p">,</span> <span class="n">minNeighbors</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">minSize</span><span class="o">=</span><span class="p">(</span><span class="mi">140</span><span class="p">,</span> <span class="mi">140</span><span class="p">))</span>

<span class="n">gender_classifier</span> <span class="o">=</span> <span class="n">load_model</span><span class="p">(</span>
    <span class="s2">&#34;classifier/gender_models/simple_CNN.81-0.96.hdf5&#34;</span><span class="p">)</span>
<span class="n">gender_labels</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">:</span> <span class="s1">&#39;女&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span> <span class="s1">&#39;男&#39;</span><span class="p">}</span>
<span class="n">color</span> <span class="o">=</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>

<span class="k">for</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span> <span class="ow">in</span> <span class="n">faces</span><span class="p">:</span>
    <span class="n">face</span> <span class="o">=</span> <span class="n">img</span><span class="p">[(</span><span class="n">y</span> <span class="o">-</span> <span class="mi">60</span><span class="p">):(</span><span class="n">y</span> <span class="o">+</span> <span class="n">h</span> <span class="o">+</span> <span class="mi">60</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="mi">30</span><span class="p">):(</span><span class="n">x</span> <span class="o">+</span> <span class="n">w</span> <span class="o">+</span> <span class="mi">30</span><span class="p">)]</span>
    <span class="n">face</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">face</span><span class="p">,</span> <span class="p">(</span><span class="mi">48</span><span class="p">,</span> <span class="mi">48</span><span class="p">))</span>
    <span class="n">face</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">expand_dims</span><span class="p">(</span><span class="n">face</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">face</span> <span class="o">=</span> <span class="n">face</span> <span class="o">/</span> <span class="mf">255.0</span>
    <span class="n">gender_label_arg</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">gender_classifier</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">face</span><span class="p">))</span>
    <span class="n">gender</span> <span class="o">=</span> <span class="n">gender_labels</span><span class="p">[</span><span class="n">gender_label_arg</span><span class="p">]</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">h</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">w</span><span class="p">),</span> <span class="n">color</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">chineseText</span><span class="o">.</span><span class="n">cv2ImgAddText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">gender</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="n">h</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;Image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="5-利用keras实现表情识别">5. 利用<strong>keras</strong>实现表情识别</h3>
<h4 id="实现代码-7">实现代码</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">load_model</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">chineseText</span>
<span class="kn">import</span> <span class="nn">datetime</span>

<span class="n">startTime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
<span class="n">emotion_classifier</span> <span class="o">=</span> <span class="n">load_model</span><span class="p">(</span>
    <span class="s1">&#39;classifier/emotion_models/simple_CNN.530-0.65.hdf5&#39;</span><span class="p">)</span>
<span class="n">endTime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="p">)</span>

<span class="n">emotion_labels</span> <span class="o">=</span> <span class="p">{</span>
    <span class="mi">0</span><span class="p">:</span> <span class="s1">&#39;生气&#39;</span><span class="p">,</span>
    <span class="mi">1</span><span class="p">:</span> <span class="s1">&#39;厌恶&#39;</span><span class="p">,</span>
    <span class="mi">2</span><span class="p">:</span> <span class="s1">&#39;恐惧&#39;</span><span class="p">,</span>
    <span class="mi">3</span><span class="p">:</span> <span class="s1">&#39;开心&#39;</span><span class="p">,</span>
    <span class="mi">4</span><span class="p">:</span> <span class="s1">&#39;难过&#39;</span><span class="p">,</span>
    <span class="mi">5</span><span class="p">:</span> <span class="s1">&#39;惊喜&#39;</span><span class="p">,</span>
    <span class="mi">6</span><span class="p">:</span> <span class="s1">&#39;平静&#39;</span>
<span class="p">}</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="s2">&#34;img/emotion/emotion.png&#34;</span><span class="p">)</span>
<span class="n">face_classifier</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CascadeClassifier</span><span class="p">(</span>
    <span class="s2">&#34;C:\Python36\Lib\site-packages\opencv-master\data\haarcascades\haarcascade_frontalface_default.xml&#34;</span>
<span class="p">)</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
<span class="n">faces</span> <span class="o">=</span> <span class="n">face_classifier</span><span class="o">.</span><span class="n">detectMultiScale</span><span class="p">(</span>
    <span class="n">gray</span><span class="p">,</span> <span class="n">scaleFactor</span><span class="o">=</span><span class="mf">1.2</span><span class="p">,</span> <span class="n">minNeighbors</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">minSize</span><span class="o">=</span><span class="p">(</span><span class="mi">40</span><span class="p">,</span> <span class="mi">40</span><span class="p">))</span>
<span class="n">color</span> <span class="o">=</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

<span class="k">for</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span> <span class="ow">in</span> <span class="n">faces</span><span class="p">:</span>
    <span class="n">gray_face</span> <span class="o">=</span> <span class="n">gray</span><span class="p">[(</span><span class="n">y</span><span class="p">):(</span><span class="n">y</span> <span class="o">+</span> <span class="n">h</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span><span class="p">):(</span><span class="n">x</span> <span class="o">+</span> <span class="n">w</span><span class="p">)]</span>
    <span class="n">gray_face</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">gray_face</span><span class="p">,</span> <span class="p">(</span><span class="mi">48</span><span class="p">,</span> <span class="mi">48</span><span class="p">))</span>
    <span class="n">gray_face</span> <span class="o">=</span> <span class="n">gray_face</span> <span class="o">/</span> <span class="mf">255.0</span>
    <span class="n">gray_face</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">expand_dims</span><span class="p">(</span><span class="n">gray_face</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">gray_face</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">expand_dims</span><span class="p">(</span><span class="n">gray_face</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">emotion_label_arg</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">emotion_classifier</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">gray_face</span><span class="p">))</span>
    <span class="n">emotion</span> <span class="o">=</span> <span class="n">emotion_labels</span><span class="p">[</span><span class="n">emotion_label_arg</span><span class="p">]</span>
    <span class="n">cv2</span><span class="o">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="mi">10</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">10</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">h</span> <span class="o">-</span> <span class="mi">10</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">w</span> <span class="o">-</span> <span class="mi">10</span><span class="p">),</span>
                  <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">chineseText</span><span class="o">.</span><span class="n">cv2ImgAddText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">emotion</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="n">h</span> <span class="o">*</span> <span class="mf">0.3</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">color</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s2">&#34;Image&#34;</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="四利用gpu加速dlib提高效率">四、利用GPU加速Dlib提高效率</h2>
<blockquote>
<p>在前面的小实验中我们发现了，使用Dlib来实现的人脸检测与识别速度很慢，在视频中很难实现实时性。
所以我们不仅要想，是否可以用GPU加速一下。
以前可能很麻烦，现在英伟达推出的CUDA就专门为了解决这个而生。</p>
</blockquote>
<h3 id="1-首先下载cuda">1. 首先下载<strong>CUDA</strong></h3>
<p><a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener noreffer">CUDA下载链接</a></p>
<p>下载并安装，不必多说，一路下一步</p>
<h3 id="2-然后下载cudnn">2. 然后下载<strong>cudnn</strong></h3>
<p><a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener noreffer">cudnn下载链接</a></p>
<p>这里下载需要注册英伟达账号，注册就行，下载下来后解压，里面提供cudnn库文件以及头文件，需要把cudnn目录下的bin、include以及lib目录中的文件拷贝到相应的cuda目录中的bin、include和lib目录中去。</p>
<h3 id="3-安装cmake">3. 安装<strong>cmake</strong></h3>
<p>cmake是要在后面编译Dlib用到的。
<a href="https://cmake.org/download/" target="_blank" rel="noopener noreffer">cmake下载链接</a>
记住安装并添加path。</p>
<h3 id="4-编译dlib">4. 编译Dlib</h3>
<p>这里我们跳过，因为后面可以直接在安装Dlib库时让他自动编译，能自动搞何必去麻烦，如果感兴趣可以自己去编译。</p>
<h3 id="5-安装支持cuda的dlib库会自动编译">5. 安装支持CUDA的Dlib库（会自动编译）</h3>
<p>我们打开64位的cmd（这一个会在安装VS2017的时候提供），或者打开64位的Powershell，在里面运行安装命令</p>
<p><code>python setup.py install --yes DLIB_USE_CUDA</code></p>
<p>这一个命令会自动编译Dlib并且安装，就不用操心了。</p>
<blockquote>
<p><strong>在cmake编译的过程中可能会报出各种问题，稍微总结一下：</strong>
如果出现类似于没找到相应编译器的原因，说明vs安装可能有问题，可能是vs版本比较老，vs安装不正确，或者vs安装不完整。不管怎么说vs的安装时间会需要很长时间，而且由于vs版本的问题，安装新的vs可能会出现各种问题，如果想手动卸载重装就更坑了，这个时候可以用卸载工具进行卸载：https://github.com/Microsoft/VisualStudioUninstaller/releases,下载之后直接解压然后以运行可执行程序，等待自动清理完成，然后重新安装vs；<br>
如果出现类似于找不到cuda的问题，请确认是否正确安装cuda；并且，如果提示找到了cuda但没有正确的cudnn，请确认是否正确地把cudnn中的lib、include和bin目录中的文件拷贝到相应的cuda目录底下；
在使用cmake编译的时候如果你更改了配置，那么需要在cmake‘中点击file中的delete cache，然后重新configure；
有一种很奇葩的现象是，有可能你的机器上已经安装过了cuda和cudnn，并且之前使用cmake configure的时候成功编译完成得到dlib的python库，但是出于某些原因需要重新安装cuda和cudnn，那么不仅需要手动卸载之前的cuda，而且最好也删除site-packages目录中所有和dlib相关的目录和文件，以及cmake输出得到的临时文件，然后重新安装cuda和cudnn，并且按照之前的步骤执行python setup.py install &ndash;yes DLIB_USE_CUDA，得到dlib的python库文件。
如果编译顺利，并且中间没有报错，可以新建一个python程序，然后import dlib成功，大功告成。</p>
</blockquote>
<h3 id="6-验证新编译好的dlib是否支持cuda">6. 验证新编译好的Dlib是否支持CUDA</h3>
<p><strong>python脚本运行</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">dlib</span>
<span class="k">print</span><span class="p">(</span><span class="n">dlib</span><span class="o">.</span><span class="n">__</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">dlib</span><span class="o">.</span><span class="n">DLIB_USE_CUDA</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">dlib</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">get_num_devices</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="人脸检测和识别学习就告一段落了感谢观看">人脸检测和识别学习就告一段落了，感谢观看</h2>]]></description></item></channel></rss>