<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>git - tag - zu1k</title><link>https://lgf.im/tags/git/</link><description>git - tag - zu1k</description><generator>Hugo -- gohugo.io</generator><managingEditor>i@lgf.im (zu1k)</managingEditor><webMaster>i@lgf.im (zu1k)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 27 Mar 2020 15:45:02 +0000</lastBuildDate><atom:link href="https://lgf.im/tags/git/" rel="self" type="application/rss+xml"/><item><title>给git设置代理</title><link>https://lgf.im/posts/coding/set-proxy-for-git/</link><pubDate>Fri, 27 Mar 2020 15:45:02 +0000</pubDate><author/><guid>https://lgf.im/posts/coding/set-proxy-for-git/</guid><description><![CDATA[<p>近期，Github的直连速度一直不理想，甚至被墙或者MITM，最好的解决办法就是挂代理</p>
<p>Git 可以使用四种不同的协议来传输资料：本地协议（Local），HTTP 协议，SSH（Secure Shell）协议及 Git 协议</p>
<p>而我们平时使用github一般使用两种协议，一种是http协议，另一种是ssh协议，针对这两种协议有两种不同的代理设置办法</p>
<h2 id="http协议">http协议</h2>
<p>通常使用的链接形如：<code>https://github.com/git/git.git</code></p>
<p>针对这种协议，代理设置比较简单</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># http或https代理</span>
git config --global https.proxy http://127.0.0.1:1080
git config --global https.proxy https://127.0.0.1:1080

<span class="c1"># 取消代理</span>
git config --global --unset http.proxy
git config --global --unset https.proxy
</code></pre></td></tr></table>
</div>
</div><h2 id="ssh协议">ssh协议</h2>
<p>通常使用的链接形如：<code>git@github.com:git/git.git</code> 或者 <code>ssh://[&lt;username&gt;@]&lt;server&gt;[:&lt;port&gt;]/path/repo.git</code></p>
<p>对于使用ssh协议的库，上面的代理设置办法就失效了，需要给ssh设置socks代理</p>
<p>在 <code>~/.ssh/config</code> 文件中添加下面内容， 如果没有这个文件就新建</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">Host github.com
ProxyCommand nc -X <span class="m">5</span> -x 127.0.0.1:1080 %h %p
</code></pre></td></tr></table>
</div>
</div><p>这里使用的是nc命令，linux需要安装netcat(一般自带了)，windows需要单独下载</p>
<p>windows如果安装了<code>mingw</code>也可以使用<code>connect</code>命令来替代<code>nc</code>命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">Host github.com
ProxyCommand connect -S 127.0.0.1:1080 %h %p
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>补充： 详见 <a href="https://blog.lgf.im/2020/use-ucloud-globalssh-to-speedup-server-ssh.html">https://blog.lgf.im/2020/use-ucloud-globalssh-to-speedup-server-ssh.html</a>
可以通过 GlobalSSH 的海外加速服务来加速github的访问，经过我的尝试效果还不错，可以跑到10Mbps
我用的域名为 <code>zll.us</code> ，大家可以拿去用，使用方法如下：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">原命令
git clone git@github.com:moby/moby.git

替换后
git clone git@zll.us:moby/moby.git
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>一些我刚学到的GIT技巧</title><link>https://lgf.im/posts/learn/some-git-skills/</link><pubDate>Sun, 01 Dec 2019 20:32:44 +0000</pubDate><author/><guid>https://lgf.im/posts/learn/some-git-skills/</guid><description><![CDATA[<h3 id="git-reflog">git reflog</h3>
<p>git reflog 可以查看所有分支的所有操作记录（包括（包括commit和reset的操作），包括已经被删除的commit记录，git log则不能察看已经删除了的commit记录，而且跟进结果可以回退道某一个修改</p>
<p>有时候想要删除reflog记录，可以使用下面的命令</p>
<p>首先确保所有分支都没有引用该提交，包括HEAD也不指向这个提交。</p>
<p>然后 git reflog expire &ndash;expire=now &ndash;all (这会清除分支变更历史)</p>
<p>然后 git gc &ndash;prune=now (不用调整时间，加上&ndash;prune=now命令即可)</p>
<h3 id="git-rebase">git rebase</h3>
<p>参考文章：http://jartto.wang/2018/12/11/git-rebase/</p>
<p>可以合并多次提交记录: git rebase -i HEAD~4</p>
<p>可以合并分支而不产生merge记录</p>
]]></description></item></channel></rss>